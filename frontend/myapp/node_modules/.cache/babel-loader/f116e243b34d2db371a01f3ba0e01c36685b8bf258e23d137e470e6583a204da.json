{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leonidas\\\\Downloads\\\\project0-main\\\\project0-main\\\\frontend\\\\myapp\\\\src\\\\components\\\\weatherAnalytics\\\\weatherAnalytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// // import GraphBar from '../BarGraph/GraphBar';\nimport LineGraph from \"../LineGraph/LineGraph\";\n// import data from \"./data.json\";\nimport \"./weatherAnalytics.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherAnalytics = ({\n  location\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  const [interval, setInterval] = useState(7); // Default to past 7 days\n\n  // useEffect(() => {\n  //   const fetchWeatherData = async () => {\n  //     try {\n  //       // const response = await fetch(`https://api.example.com/weather/interval?days=${interval}`); // Replace with your API endpoint\n  //       // const data = await response.json();\n  //       setWeatherData(data.slice(0, interval));\n  //     } catch (error) {\n  //       console.error('Error fetching weather data:', error);\n  //     }\n  //   };\n\n  //   fetchWeatherData();\n  // }, [interval]);\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.post('http://localhost:5000/current-weather', {\n          city: location,\n          days: interval\n        }, {\n          headers: {\n            'Content-Type': 'application/json' // Specify the content type\n            // 'Authorization': 'Bearer YOUR_TOKEN_HERE', // If your API requires an authorization token\n            // 'Access-Control-Allow-Origin': '*', // Allow all origins (CORS)\n            // 'Access-Control-Allow-Methods': 'POST, GET, OPTIONS', // Methods allowed\n            // 'Access-Control-Allow-Headers': 'Content-Type, Authorization', // Headers allowed\n            // // Add any other h\n          }\n        });\n        console.log(response.data.summaries);\n\n        // Slice the data based on interval and set the state\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n    fetchWeatherData();\n  }, [location, interval]);\n  const handleIntervalChange = e => {\n    setInterval(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-analytics\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interval-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"interval\",\n        children: \"Select Interval: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"interval\",\n        value: interval,\n        onChange: handleIntervalChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 7,\n          children: \"Past 7 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 14,\n          children: \"Past 14 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 21,\n          children: \"Past 21 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 30,\n          children: \"Past 30 days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 90,\n          children: \"Past 3 months\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n      data: weatherData.summaries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherAnalytics, \"WxiN/n3OJ4hr4DldBZa9lZPgxoY=\");\n_c = WeatherAnalytics;\nexport default WeatherAnalytics;\nvar _c;\n$RefreshReg$(_c, \"WeatherAnalytics\");","map":{"version":3,"names":["React","useState","useEffect","LineGraph","axios","jsxDEV","_jsxDEV","WeatherAnalytics","location","_s","weatherData","setWeatherData","interval","setInterval","fetchWeatherData","response","post","city","days","headers","console","log","data","summaries","error","handleIntervalChange","e","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","_c","$RefreshReg$"],"sources":["D:/Leonidas/Downloads/project0-main/project0-main/frontend/myapp/src/components/weatherAnalytics/weatherAnalytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// // import GraphBar from '../BarGraph/GraphBar';\nimport LineGraph from \"../LineGraph/LineGraph\"\n// import data from \"./data.json\";\nimport \"./weatherAnalytics.css\";\nimport axios from 'axios';\n\nconst WeatherAnalytics = ({location}) => {\n  const [weatherData, setWeatherData] = useState([]);\n  const [interval, setInterval] = useState(7); // Default to past 7 days\n\n  // useEffect(() => {\n  //   const fetchWeatherData = async () => {\n  //     try {\n  //       // const response = await fetch(`https://api.example.com/weather/interval?days=${interval}`); // Replace with your API endpoint\n  //       // const data = await response.json();\n  //       setWeatherData(data.slice(0, interval));\n  //     } catch (error) {\n  //       console.error('Error fetching weather data:', error);\n  //     }\n  //   };\n\n  //   fetchWeatherData();\n  // }, [interval]);\n\n\n    useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.post(\n          'http://localhost:5000/current-weather', {\n            city : location,\n            days : interval\n          }, {\n            headers: {\n              'Content-Type': 'application/json', // Specify the content type\n              // 'Authorization': 'Bearer YOUR_TOKEN_HERE', // If your API requires an authorization token\n              // 'Access-Control-Allow-Origin': '*', // Allow all origins (CORS)\n              // 'Access-Control-Allow-Methods': 'POST, GET, OPTIONS', // Methods allowed\n              // 'Access-Control-Allow-Headers': 'Content-Type, Authorization', // Headers allowed\n              // // Add any other h\n            }\n          }\n        );\n        console.log(response.data.summaries);\n        \n\n        // Slice the data based on interval and set the state\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n\n    fetchWeatherData();\n  }, [location, interval]);\n\n  \n  const handleIntervalChange = (e) => {\n    setInterval(e.target.value);\n  };\n\n  return (\n    <div className=\"weather-analytics\">\n      <div className=\"interval-select\">\n        <label htmlFor=\"interval\">Select Interval: </label>\n        <select id=\"interval\" value={interval} onChange={handleIntervalChange}>\n          <option value={7}>Past 7 days</option>\n          <option value={14}>Past 14 days</option>\n          <option value={21}>Past 21 days</option>\n          <option value={30}>Past 30 days</option>\n          <option value={90}>Past 3 months</option>\n        </select>\n      </div>\n      <LineGraph data={weatherData.summaries} />\n    </div>\n  );\n};\n\nexport default WeatherAnalytics;\n\n\n\n\n\n\n\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}