{"ast":null,"code":"var _jsxFileName = \"D:\\\\Leonidas\\\\Downloads\\\\project0-main\\\\project0-main\\\\frontend\\\\myapp\\\\src\\\\container\\\\WebApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./WebApp.css\";\nimport bellIcon from \"../img/bell2.png\";\nimport ringingBellIcon from \"../img/bell_ring2.png\";\nimport WeatherAnalytics from \"../components/weatherAnalytics/weatherAnalytics\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [location, setLocation] = useState(\"Delhi\");\n  const [inputLocation, setInputLocation] = useState(location);\n  const [alert, setAlert] = useState(false);\n  // const [consecutiveAlerts, setConsecutiveAlerts] = useState(1);\n  const [threshold, setThreshold] = useState(30); // Default threshold in Fahrenheit\n\n  useEffect(() => {\n    const fetchWeather = async loc => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/current-weather\", {\n          city: loc\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        console.log(response.data);\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n    fetchWeather(location);\n    const intervalId = setInterval(() => {\n      fetchWeather(location);\n    }, 300000);\n    return () => clearInterval(intervalId);\n  }, [location]);\n  useEffect(() => {\n    if (weatherData) {\n      if (weatherData.count >= 2) {\n        setAlert(true);\n      } else {\n        setAlert(false);\n      }\n    }\n  }, [weatherData]);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/current-weather\", {\n          city: location,\n          days: interval\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\" // Specify the content type\n            // 'Authorization': 'Bearer YOUR_TOKEN_HERE', // If your API requires an authorization token\n            // 'Access-Control-Allow-Origin': '*', // Allow all origins (CORS)\n            // 'Access-Control-Allow-Methods': 'POST, GET, OPTIONS', // Methods allowed\n            // 'Access-Control-Allow-Headers': 'Content-Type, Authorization', // Headers allowed\n            // // Add any other h\n          }\n        });\n        console.log(response.data.summaries);\n\n        // Slice the data based on interval and set the state\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n    fetchWeatherData();\n  }, [threshold]);\n  const handleLocationChange = () => {\n    setLocation(inputLocation);\n    console.log(inputLocation);\n  };\n  const handleThresholdChange = e => {\n    const value = e.target.value;\n    if (!isNaN(value) && value !== \"\") {\n      setThreshold(Number(value));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: weatherData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Right now in\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputLocation,\n            onChange: e => setInputLocation(e.target.value),\n            id: \"location-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLocationChange,\n            id: \"location-button\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), \" It's \", weatherData.main.description.toLowerCase(), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data_section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather_icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://openweathermap.org/img/w/${weatherData.main.icon}.png`,\n              alt: \"Weather Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"temp\",\n            children: `${weatherData.main.temp}Â°`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wind_humid_section\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Wind Speed: ${weatherData.main.wind} mph`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Humidity: ${weatherData.main.humidity}%`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert-section ${alert ? \"active\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: alert ? ringingBellIcon : bellIcon,\n            alt: \"Bell Icon\",\n            className: `bell-icon ${alert ? \"shaking\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Threshold: \", threshold, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"threshold-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"threshold\",\n            children: \"Set Threshold (\\xB0C): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"threshold\",\n            value: threshold,\n            onChange: handleThresholdChange,\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(WeatherAnalytics, {\n            location: location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"N28w7BDXUmTkmydS+bPj/5AKOnE=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","bellIcon","ringingBellIcon","WeatherAnalytics","axios","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","location","setLocation","inputLocation","setInputLocation","alert","setAlert","threshold","setThreshold","fetchWeather","loc","response","post","city","headers","console","log","data","error","intervalId","setInterval","clearInterval","count","fetchWeatherData","days","interval","summaries","handleLocationChange","handleThresholdChange","e","value","target","isNaN","Number","className","children","type","onChange","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","main","description","toLowerCase","src","icon","alt","temp","wind","humidity","htmlFor","min","_c","$RefreshReg$"],"sources":["D:/Leonidas/Downloads/project0-main/project0-main/frontend/myapp/src/container/WebApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./WebApp.css\";\nimport bellIcon from \"../img/bell2.png\";\nimport ringingBellIcon from \"../img/bell_ring2.png\";\nimport WeatherAnalytics from \"../components/weatherAnalytics/weatherAnalytics\";\nimport axios from \"axios\";\n\nconst Weather = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [location, setLocation] = useState(\"Delhi\");\n  const [inputLocation, setInputLocation] = useState(location);\n  const [alert, setAlert] = useState(false);\n  // const [consecutiveAlerts, setConsecutiveAlerts] = useState(1);\n  const [threshold, setThreshold] = useState(30); // Default threshold in Fahrenheit\n\n  useEffect(() => {\n    const fetchWeather = async (loc) => {\n      try {\n        const response = await axios.post(\n          \"http://localhost:5000/current-weather\",\n          {\n            city: loc,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        console.log(response.data);\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n\n    fetchWeather(location);\n\n    const intervalId = setInterval(() => {\n      fetchWeather(location);\n    }, 300000);\n\n    return () => clearInterval(intervalId);\n  }, [location]);\n\n  useEffect(() => {\n    if (weatherData) {\n      if (weatherData.count >= 2) {\n        setAlert(true);\n      } else {\n        setAlert(false);\n      }\n    }\n  }, [weatherData]);\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.post(\n          \"http://localhost:5000/current-weather\",\n          {\n            city: location,\n            days: interval,\n          },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\", // Specify the content type\n              // 'Authorization': 'Bearer YOUR_TOKEN_HERE', // If your API requires an authorization token\n              // 'Access-Control-Allow-Origin': '*', // Allow all origins (CORS)\n              // 'Access-Control-Allow-Methods': 'POST, GET, OPTIONS', // Methods allowed\n              // 'Access-Control-Allow-Headers': 'Content-Type, Authorization', // Headers allowed\n              // // Add any other h\n            },\n          }\n        );\n        console.log(response.data.summaries);\n\n        // Slice the data based on interval and set the state\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n\n    fetchWeatherData();\n  }, [threshold]);\n\n  const handleLocationChange = () => {\n    setLocation(inputLocation);\n    console.log(inputLocation);\n  };\n\n  const handleThresholdChange = (e) => {\n    const value = e.target.value;\n    if (!isNaN(value) && value !== \"\") {\n      setThreshold(Number(value));\n    }\n  };\n\n  return (\n    <div className=\"weather-container\">\n      {weatherData ? (\n        <div>\n          <div>\n            <h2>\n              Right now in{\" \"}\n              <input\n                type=\"text\"\n                value={inputLocation}\n                onChange={(e) => setInputLocation(e.target.value)}\n                id=\"location-input\"\n              />\n              <button onClick={handleLocationChange} id=\"location-button\">\n                Update\n              </button>\n              {\" It's \"}\n              {weatherData.main.description.toLowerCase()}.\n            </h2>\n            <div className=\"data_section\">\n              <div className=\"weather_icon\">\n                <img\n                  src={`http://openweathermap.org/img/w/${weatherData.main.icon}.png`}\n                  alt=\"Weather Icon\"\n                />\n              </div>\n              <p className=\"temp\">{`${weatherData.main.temp}Â°`}</p>\n              <div className=\"wind_humid_section\">\n                <p>{`Wind Speed: ${weatherData.main.wind} mph`}</p>\n                <p>{`Humidity: ${weatherData.main.humidity}%`}</p>\n              </div>\n            </div>\n\n            {/* Alert Section */}\n            <div className={`alert-section ${alert ? \"active\" : \"\"}`}>\n              <img\n                src={alert ? ringingBellIcon : bellIcon}\n                alt=\"Bell Icon\"\n                className={`bell-icon ${alert ? \"shaking\" : \"\"}`}\n              />\n              <span>Threshold: {threshold}Â°C</span>\n            </div>\n\n            {/* Threshold Input */}\n            <div className=\"threshold-input\">\n              <label htmlFor=\"threshold\">Set Threshold (Â°C): </label>\n              <input\n                type=\"number\"\n                id=\"threshold\"\n                value={threshold}\n                onChange={handleThresholdChange}\n                min=\"0\"\n              />\n            </div>\n\n            <div>\n              <WeatherAnalytics location={location} />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}