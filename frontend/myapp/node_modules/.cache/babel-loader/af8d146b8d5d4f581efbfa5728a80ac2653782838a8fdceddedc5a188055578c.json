{"ast":null,"code":"import React,{useState,useEffect}from'react';// // import GraphBar from '../BarGraph/GraphBar';\nimport LineGraph from\"../LineGraph/LineGraph\";// import data from \"./data.json\";\nimport\"./weatherAnalytics.css\";import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WeatherAnalytics=_ref=>{let{location}=_ref;const[weatherData,setWeatherData]=useState([]);const[interval,setInterval]=useState(7);// Default to past 7 days\n// useEffect(() => {\n//   const fetchWeatherData = async () => {\n//     try {\n//       // const response = await fetch(`https://api.example.com/weather/interval?days=${interval}`); // Replace with your API endpoint\n//       // const data = await response.json();\n//       setWeatherData(data.slice(0, interval));\n//     } catch (error) {\n//       console.error('Error fetching weather data:', error);\n//     }\n//   };\n//   fetchWeatherData();\n// }, [interval]);\nuseEffect(()=>{const fetchWeatherData=async()=>{try{const response=await axios.post('http://localhost:5000/current-weather',{city:location,days:interval},{headers:{'Content-Type':'application/json'// Specify the content type\n// 'Authorization': 'Bearer YOUR_TOKEN_HERE', // If your API requires an authorization token\n// 'Access-Control-Allow-Origin': '*', // Allow all origins (CORS)\n// 'Access-Control-Allow-Methods': 'POST, GET, OPTIONS', // Methods allowed\n// 'Access-Control-Allow-Headers': 'Content-Type, Authorization', // Headers allowed\n// // Add any other h\n}});console.log(response.data.summaries);// Slice the data based on interval and set the state\nsetWeatherData(response.data);}catch(error){console.error('Error fetching weather data:',error);}};fetchWeatherData();},[location,interval]);const handleIntervalChange=e=>{setInterval(e.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"weather-analytics\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"interval-select\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"interval\",children:\"Select Interval: \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"interval\",value:interval,onChange:handleIntervalChange,children:[/*#__PURE__*/_jsx(\"option\",{value:7,children:\"Past 7 days\"}),/*#__PURE__*/_jsx(\"option\",{value:14,children:\"Past 14 days\"}),/*#__PURE__*/_jsx(\"option\",{value:21,children:\"Past 21 days\"}),/*#__PURE__*/_jsx(\"option\",{value:30,children:\"Past 30 days\"}),/*#__PURE__*/_jsx(\"option\",{value:90,children:\"Past 3 months\"})]})]}),/*#__PURE__*/_jsx(LineGraph,{data:weatherData.summaries})]});};export default WeatherAnalytics;","map":{"version":3,"names":["React","useState","useEffect","LineGraph","axios","jsx","_jsx","jsxs","_jsxs","WeatherAnalytics","_ref","location","weatherData","setWeatherData","interval","setInterval","fetchWeatherData","response","post","city","days","headers","console","log","data","summaries","error","handleIntervalChange","e","target","value","className","children","htmlFor","id","onChange"],"sources":["D:/Leonidas/Downloads/project0-main/project0-main/frontend/myapp/src/components/weatherAnalytics/weatherAnalytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// // import GraphBar from '../BarGraph/GraphBar';\nimport LineGraph from \"../LineGraph/LineGraph\"\n// import data from \"./data.json\";\nimport \"./weatherAnalytics.css\";\nimport axios from 'axios';\n\nconst WeatherAnalytics = ({location}) => {\n  const [weatherData, setWeatherData] = useState([]);\n  const [interval, setInterval] = useState(7); // Default to past 7 days\n\n  // useEffect(() => {\n  //   const fetchWeatherData = async () => {\n  //     try {\n  //       // const response = await fetch(`https://api.example.com/weather/interval?days=${interval}`); // Replace with your API endpoint\n  //       // const data = await response.json();\n  //       setWeatherData(data.slice(0, interval));\n  //     } catch (error) {\n  //       console.error('Error fetching weather data:', error);\n  //     }\n  //   };\n\n  //   fetchWeatherData();\n  // }, [interval]);\n\n\n    useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.post(\n          'http://localhost:5000/current-weather', {\n            city : location,\n            days : interval\n          }, {\n            headers: {\n              'Content-Type': 'application/json', // Specify the content type\n              // 'Authorization': 'Bearer YOUR_TOKEN_HERE', // If your API requires an authorization token\n              // 'Access-Control-Allow-Origin': '*', // Allow all origins (CORS)\n              // 'Access-Control-Allow-Methods': 'POST, GET, OPTIONS', // Methods allowed\n              // 'Access-Control-Allow-Headers': 'Content-Type, Authorization', // Headers allowed\n              // // Add any other h\n            }\n          }\n        );\n        console.log(response.data.summaries);\n        \n\n        // Slice the data based on interval and set the state\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n      }\n    };\n\n    fetchWeatherData();\n  }, [location, interval]);\n\n  \n  const handleIntervalChange = (e) => {\n    setInterval(e.target.value);\n  };\n\n  return (\n    <div className=\"weather-analytics\">\n      <div className=\"interval-select\">\n        <label htmlFor=\"interval\">Select Interval: </label>\n        <select id=\"interval\" value={interval} onChange={handleIntervalChange}>\n          <option value={7}>Past 7 days</option>\n          <option value={14}>Past 14 days</option>\n          <option value={21}>Past 21 days</option>\n          <option value={30}>Past 30 days</option>\n          <option value={90}>Past 3 months</option>\n        </select>\n      </div>\n      <LineGraph data={weatherData.summaries} />\n    </div>\n  );\n};\n\nexport default WeatherAnalytics;\n\n\n\n\n\n\n\n  "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD;AACA,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C;AACA,MAAO,wBAAwB,CAC/B,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,gBAAgB,CAAGC,IAAA,EAAgB,IAAf,CAACC,QAAQ,CAAC,CAAAD,IAAA,CAClC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CAAE;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGEC,SAAS,CAAC,IAAM,CAChB,KAAM,CAAAc,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAb,KAAK,CAACc,IAAI,CAC/B,uCAAuC,CAAE,CACvCC,IAAI,CAAGR,QAAQ,CACfS,IAAI,CAAGN,QACT,CAAC,CAAE,CACDO,OAAO,CAAE,CACP,cAAc,CAAE,kBAAoB;AACpC;AACA;AACA;AACA;AACA;AACF,CACF,CACF,CAAC,CACDC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACO,IAAI,CAACC,SAAS,CAAC,CAGpC;AACAZ,cAAc,CAACI,QAAQ,CAACO,IAAI,CAAC,CAC/B,CAAE,MAAOE,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CAEDV,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,CAACL,QAAQ,CAAEG,QAAQ,CAAC,CAAC,CAGxB,KAAM,CAAAa,oBAAoB,CAAIC,CAAC,EAAK,CAClCb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC7B,CAAC,CAED,mBACEtB,KAAA,QAAKuB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCxB,KAAA,QAAKuB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B1B,IAAA,UAAO2B,OAAO,CAAC,UAAU,CAAAD,QAAA,CAAC,mBAAiB,CAAO,CAAC,cACnDxB,KAAA,WAAQ0B,EAAE,CAAC,UAAU,CAACJ,KAAK,CAAEhB,QAAS,CAACqB,QAAQ,CAAER,oBAAqB,CAAAK,QAAA,eACpE1B,IAAA,WAAQwB,KAAK,CAAE,CAAE,CAAAE,QAAA,CAAC,aAAW,CAAQ,CAAC,cACtC1B,IAAA,WAAQwB,KAAK,CAAE,EAAG,CAAAE,QAAA,CAAC,cAAY,CAAQ,CAAC,cACxC1B,IAAA,WAAQwB,KAAK,CAAE,EAAG,CAAAE,QAAA,CAAC,cAAY,CAAQ,CAAC,cACxC1B,IAAA,WAAQwB,KAAK,CAAE,EAAG,CAAAE,QAAA,CAAC,cAAY,CAAQ,CAAC,cACxC1B,IAAA,WAAQwB,KAAK,CAAE,EAAG,CAAAE,QAAA,CAAC,eAAa,CAAQ,CAAC,EACnC,CAAC,EACN,CAAC,cACN1B,IAAA,CAACH,SAAS,EAACqB,IAAI,CAAEZ,WAAW,CAACa,SAAU,CAAE,CAAC,EACvC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}